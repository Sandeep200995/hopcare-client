{"version":3,"file":"static/js/881.c64a6c34.chunk.js","mappings":"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","sources":["pages/App/Appointments/appointmentScreen.tsx","redux/actions/common/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../../components/page/Header/header\";\nimport * as COMMON_ACTIONS from \"../../../redux/actions/common\";\nimport * as AppointmentActions from \"../../../redux/actions/appointment/index\";\nimport * as APPOINTMENT_ACTION_TYPES from \"../../../redux/actions/appointment/types\";\nimport moment from \"moment\";\nimport \"./appointmentScreen.scss\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\n\nfunction AppointmentScreen() {\n  const navigate: any = useNavigate();\n  const dispatch: any = useDispatch();\n  const appointmentState = useSelector((state: any) => state.appointmentData);\n  const [selAppTab, setAppointTab]: any = useState({ type: \"upcoming\" });\n  const [allAppointmentTypes]: any = useState([{ type: \"upcoming\", name: \"Upcoming\" }, { type: \"today\", name: \"Today\" }, { type: \"past\", name: \"Past\" }])\n  const [appointmentData, setAppointmentData]: any = useState({ list: [\n    {\n      appointmentDate: \"18-07-2023\",\n      clinicId: \"hsbahjd\",\n      ptAge: \"23\",\n      ptFirstName: \"Sandeep\",\n      ptGender: \"M\",\n      ptLastName: \"Singh\",\n      ptPaymentMode: \"Cash\",\n      ptPaymentStatus: \"Pending\",\n      ptPhoneNumber: \"7618815004\",\n      _id: \"shfajhdgsajhdjhsa\"\n    },\n    {\n      appointmentDate: \"18-07-2023\",\n      clinicId: \"hsbahjd\",\n      ptAge: \"23\",\n      ptFirstName: \"Sandeep\",\n      ptGender: \"M\",\n      ptLastName: \"Singh\",\n      ptPaymentMode: \"Cash\",\n      ptPaymentStatus: \"Pending\",\n      ptPhoneNumber: \"7618815004\",\n      _id: \"shfajhdgsajhdjhsa\"\n    },\n    {\n      appointmentDate: \"18-07-2023\",\n      clinicId: \"hsbahjd\",\n      ptAge: \"23\",\n      ptFirstName: \"Sandeep\",\n      ptGender: \"M\",\n      ptLastName: \"Singh\",\n      ptPaymentMode: \"Cash\",\n      ptPaymentStatus: \"Pending\",\n      ptPhoneNumber: \"7618815004\",\n      _id: \"shfajhdgsajhdjhsa\"\n    }\n  ], total: 0, skip: 0 });\n\n  // useEffect(() => {\n  //   dispatch(COMMON_ACTIONS.startLoading({}));\n  //   dispatch(AppointmentActions.getAllAppointmentsAction({ formData: { limit: 20, skip: 0 } }));\n  // }, [])\n\n\n\n  useEffect(() => {\n    switch (appointmentState.case) {\n      case APPOINTMENT_ACTION_TYPES.GET_ALL_APPOINTMENTS_SUCCESS:\n        setAppointmentData(appointmentState.userAppointments);\n        dispatch(COMMON_ACTIONS.stopLoading({}));\n        break;\n      case APPOINTMENT_ACTION_TYPES.GET_ALL_APPOINTMENTS_FAILURE:\n        // toast(appointmentState.message);\n        toast(appointmentState.message, { position: \"top-center\" });\n        dispatch(COMMON_ACTIONS.stopLoading({}));\n        break;\n      default:\n        break;\n    }\n  }, [appointmentState]);\n\n\n  const renderTabs = useCallback(() => {\n    return (\n      <div className='booking-tab'>\n        {allAppointmentTypes.map((appInfo: any, ind: number) => {\n          const { name, type } = appInfo;\n          return (<button key={`${ind}_${appInfo.type}`} onClick={() => setAppointTab({ ...selAppTab, appInfo })} className={`btn-booking ${selAppTab.type === type ? \"active\" : \"\"}`}>{name ? name : \" - \"}</button>);\n        })}\n      </div>\n    )\n  }, [allAppointmentTypes, selAppTab])\n\n  const renderAppointments = useCallback(() => {\n    // let appointments = [{\"\"}]\n    console.log(appointmentData,\"Apppppppp\")\n    return (\n      <div className='booking-page'>\n        {appointmentData.list.map((appInfo: any, ind: number) => {\n          const { appointmentDate,\n            clinicId,\n            ptAge,\n            ptFirstName,\n            ptGender,\n            ptLastName,\n            ptPaymentMode,\n            ptPaymentStatus,\n            ptPhoneNumber,\n            _id } = appInfo;\n          return (\n              <div>\n                <div className='booking-card'>\n                  {/* <img src={ImgHosp} /> */}\n                  <div className='booking-card-inner'>\n                    <span></span>\n                    {/* <span>Current</span> */}\n                    <h5>Patient Details</h5>\n                    <p>{`${ptFirstName ? ptFirstName : \"\"} ${ptLastName ? ptLastName : \"\"} ${ptAge ? ptAge : \"\"}/${ptGender ? ptGender : \"\"}`}</p>\n                    <h5>Appointment Details</h5>\n                    <p>{`${appointmentDate ? moment(appointmentDate).format(\"dddd D MMM YY\") : \" - \"}`}</p>\n                    <button className=\"btn\">Current</button>\n                    <button className=\"btn\">next</button>\n                  </div>\n                </div>\n              </div>\n          )\n        })}\n      </div>\n    )\n  }, [allAppointmentTypes, selAppTab, appointmentData])\n\n  return (\n    <div className=\"App\">\n      <Header addLeftBackBtn backIconClk={() => navigate(\"/\", { replace: true })}></Header>\n      {/* {renderTabs()}*/}\n      {renderAppointments()}\n      {/* <div>Work in progress!!!</div>\n      <div>Please try after sometime</div> */}\n    </div>\n  );\n}\n\nexport default AppointmentScreen;\n","import * as Types from \"./types\";\r\n\r\n/**\r\n * @summary Authetication Actions\r\n */\r\nexport const startLoading = (payload: object) => ({ type: Types.START_LOADING, payload });\r\nexport const stopLoading = (payload: object) => ({ type: Types.STOP_LOADING, payload });\r\n"],"names":["navigate","useNavigate","dispatch","useDispatch","appointmentState","useSelector","state","appointmentData","useState","type","selAppTab","setAppointTab","name","allAppointmentTypes","list","appointmentDate","clinicId","ptAge","ptFirstName","ptGender","ptLastName","ptPaymentMode","ptPaymentStatus","ptPhoneNumber","_id","total","skip","setAppointmentData","useEffect","case","APPOINTMENT_ACTION_TYPES","userAppointments","COMMON_ACTIONS","toast","message","position","useCallback","className","map","appInfo","ind","onClick","renderAppointments","console","log","moment","format","addLeftBackBtn","backIconClk","replace","startLoading","payload","Types","stopLoading"],"sourceRoot":""}