{"version":3,"file":"static/js/80.07ad0816.chunk.js","mappings":"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","sources":["pages/Auth/OTP/otpScreen.tsx"],"sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { storage } from \"../../../utills\";\nimport \"./otp.scss\";\nimport * as AUTH_API from \"../../../redux/saga/auth-saga\";\nimport * as AUTH_ACTIONS from \"../../../redux/actions/Auth/authActions\";\nimport * as AUTH_ACTIONS_TYPES from \"../../../redux/actions/Auth/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppLoaderContext, AuthContext } from \"../../../contexts\";\nimport { toast } from \"react-toastify\";\n\nfunction SignupScreen() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { setIsAuthenticated } = React.useContext(AuthContext);\n  // const { isSideActive, toggleSidebar } = React.useContext(SideBarContext);\n  const { setIsAppLoader } = React.useContext(AppLoaderContext);\n  const userState = useSelector((state: any) => state.userData);\n  const formik = useFormik({\n    initialValues: {\n      phoneNumber: \"\",\n      userType: \"consumer\",\n      otp: \"\",\n      password:\"\",\n    },\n    validateOnBlur: true,\n    validateOnChange: false,\n    // validationSchema: validationSchema,\n    validate: (values) => {\n      let errors: any = {};\n      if (!values.otp) {\n        errors.otp = \"Please enter otp\";\n      }\n      return errors;\n    },\n    onSubmit: async (values) => {\n      console.log(\"Values \",values );\n      setIsAppLoader(true);\n      // dispatch(AUTH_ACTIONS.ver({ formData: values }));\n      let req = {\n        \"phoneNumber\": values.phoneNumber,\"otp\":values.otp.toString(),\"userType\": values.userType\n      };\n      try {\n        let resp: any = await AUTH_API.verifyUserByOTP(req);\n        console.log(\"response on OTP :::\", resp);\n        setIsAppLoader(false);\n        if (resp.data && resp.status === 200 && resp.data.message) {\n          toast(resp.data.message, { position: \"top-center\" });\n          storage.storeData(storage.keys.TOKEN_CL, resp.data.accessToken);\n          storage.storeData(storage.keys.USER_TYPE, resp.data.userType);\n          // storage.storeData(storage.keys.USER_ID, resp.data.userId);\n          setIsAuthenticated(true);\n          navigateAndFetchUserDetails(resp.data);\n          navigate(\"/\", { replace: true });\n          setIsAppLoader(false);\n        } else if (resp.data && resp.data.message) {\n          toast(userState.message, { position: \"top-center\" });\n        }\n      } catch (error: any) {\n        setIsAppLoader(false);\n        toast(userState.message, { position: \"top-center\" });\n      }\n    }\n  });\n\n  async function navigateAndFetchUserDetails(userData: any) {\n    setIsAppLoader(true);\n    dispatch(AUTH_ACTIONS.fetchUserDetails({ formData: {userId:userData.userId, userType: userData.userType }, token: userData.accessToken }))\n  }\n\n  useEffect(() => {\n    // console.log(\"location\",location);\n\n    if (location && location.state && location.state.otp) {\n      formik.setFieldValue('otp', location.state.otp);\n      formik.setFieldValue('phoneNumber', location.state.phoneNumber);\n      formik.setFieldValue('userType', location.state.userType);\n      formik.setFieldValue('password', location.state.password);\n    }\n  }, [location])\n\n  useEffect(() => {\n    // console.log(\"userState\", userState);\n    switch (userState.case) {\n      case AUTH_ACTIONS_TYPES.REGISTER_USER_SUCCESS:\n        setIsAppLoader(false);\n        break;\n      case AUTH_ACTIONS_TYPES.REGISTER_USER_FAILURE:\n        setIsAppLoader(false);\n        toast(userState.message, { position: \"top-center\" });\n        break;\n      default:\n        break;\n    }\n  }, [userState.case]);\n\n\n  async function getOTP() {\n    let formData = { phoneNumber: formik.values.phoneNumber, password: formik.values.password, userType: formik.values.userType };\n    setIsAppLoader(true);\n    try {\n      const response: any = await AUTH_API.resendOTPForUnvarifiedUser(formData);\n      // console.log(\"Response \", response);\n      if (response.data.user_details && response.status === 200) {\n        formik.setFieldValue('otp', response.data.user_details.otp);\n        toast(response.data.message, { position: \"top-center\" });\n      }\n      setIsAppLoader(false);\n    } catch (error: any) {\n      setIsAppLoader(false);\n      toast(\"Failed to sent request\", { position: \"top-center\" });\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"userState\", userState);\n    switch (userState.case) {\n      case AUTH_ACTIONS_TYPES.GET_USER_INFO_SUCCESS:\n        setIsAppLoader(false);\n        navigate(\"/\", { replace: true });\n        storage.storeData(storage.keys.TOKEN_CL, userState.userDetails.accessToken);\n        storage.storeData(storage.keys.USER_TYPE, userState.userDetails.userType);\n        break;\n      case AUTH_ACTIONS_TYPES.GET_USER_INFO_FAILURE:\n        setIsAppLoader(false);\n        toast(userState.message,{position:\"top-center\"});\n        break;\n      default:\n        break;\n    }\n  }, [userState.case]);\n\n\n  return (\n    <div className=\"form-area\">\n      <h2>OTP </h2>\n      <form onSubmit={formik.handleSubmit} noValidate>\n        <div className=\"form-inner\">\n          <div className=\"form-input\">\n            <input\n              type=\"number\"\n              placeholder=\"OTP\"\n              name=\"otp\"\n              maxLength={4}\n              onChange={formik.handleChange}\n              value={formik.values.otp}\n            />\n            {formik.errors.otp && <p className=\"error-text\">{formik.errors.otp}</p>}\n          </div>\n          <button type=\"button\" className=\"btn-underline\"\n           onClick={() =>getOTP()}>Resend OTP{\" \"}\n          </button>\n          <button type=\"submit\" className=\"btn-common\">\n            Submit\n          </button>\n\n          {/* <button className=\"btn-underline\" onClick={() => navigate(\"./login\", { replace: true })}>Change Number</button> */}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SignupScreen;\n"],"names":["navigate","useNavigate","location","useLocation","dispatch","useDispatch","setIsAuthenticated","React","AuthContext","setIsAppLoader","AppLoaderContext","userState","useSelector","state","userData","formik","useFormik","initialValues","phoneNumber","userType","otp","password","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","console","log","req","toString","AUTH_API","resp","data","status","message","toast","position","storage","accessToken","navigateAndFetchUserDetails","replace","AUTH_ACTIONS","formData","userId","token","response","user_details","setFieldValue","useEffect","case","AUTH_ACTIONS_TYPES","userDetails","className","handleSubmit","noValidate","type","placeholder","name","maxLength","onChange","handleChange","value","onClick","getOTP"],"sourceRoot":""}