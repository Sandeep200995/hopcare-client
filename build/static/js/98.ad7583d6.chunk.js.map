{"version":3,"file":"static/js/98.ad7583d6.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utills/storage.tsx","pages/Auth/Login/loginScreen.tsx","redux/actions/Auth/authActions.tsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","// import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// import * as Keychain from \"react-native-keychain\";\r\n\r\nconst keys = {\r\n  // AUTHENTICATED: \"@authenticated\",\r\n  // CREDENTIALS: \"@credentials\",\r\n  TOKEN_CL: \"@token\",\r\n  USER_TYPE: \"@userType\"\r\n  // USER: \"@user\",\r\n  // LANGUAGE: \"@language\"\r\n};\r\n\r\nconst storeData = async (key: string, value: any) => {\r\n  try {\r\n    const jsonValue = JSON.stringify(value);\r\n    await localStorage.setItem(key, jsonValue);\r\n  } catch (e) {\r\n    console.error(\"Failed to strore data\");\r\n    // saving error\r\n  }\r\n};\r\n\r\nconst getData = async (key: string) => {\r\n  try {\r\n    const jsonValue = await localStorage.getItem(key);\r\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n  } catch (e) {\r\n    // error reading value\r\n    console.error(\"Failed to read data\");\r\n  }\r\n};\r\n\r\nconst removeData = async (key: string) => {\r\n  try {\r\n    if (key) {\r\n      await localStorage.removeItem(key);\r\n    } else {\r\n      await localStorage.clear();\r\n    }\r\n  } catch (e) {\r\n    // error removing value\r\n    console.error(\"Failed to remove data\");\r\n  }\r\n};\r\n\r\n// const getAllKeys = async () => {\r\n//   var values = [],\r\n//     keys = Object.keys(localStorage),\r\n//     i = keys.length;\r\n//   while (i--) {\r\n//     values.push(localStorage.getItem(keys[i]));\r\n//   }\r\n//   return values;\r\n// };\r\n\r\nconst clear = async () => {\r\n  try {\r\n    // const keysToRemove = (await getAllKeys()).filter((key) => key !== keys.CREDENTIALS);\r\n    await localStorage.clear();\r\n    // await Keychain.resetGenericPassword();\r\n  } catch (e) {\r\n    console.log(\"Error clearing storage: \", e);\r\n  }\r\n};\r\n\r\nexport { keys, storeData, getData, removeData, clear };\r\n","import { useFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { useLocation, useNavigate, useParams, redirect } from \"react-router-dom\";\nimport { storage } from \"../../../utills\";\nimport \"./login.scss\";\nimport * as AUTH_ACTIONS from \"../../../redux/actions/Auth/authActions\";\nimport * as AUTH_ACTIONS_TYPES from \"../../../redux/actions/Auth/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppLoaderContext } from \"../../../contexts\";\n\nfunction LoginScreen() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  // const { isSideActive, toggleSidebar } = React.useContext(SideBarContext);\n  const { setIsAppLoader } = React.useContext(AppLoaderContext);\n  const userState = useSelector((state: any) => state.userData);\n  const formik = useFormik({\n    initialValues: {\n      phoneNumber: \"\",\n      password: \"\",\n      userType: \"consumer\"\n    },\n    validateOnBlur: true,\n    validateOnChange: false,\n    // validationSchema: validationSchema,\n    validate: (values) => {\n      let errors: any = {};\n      if (!values.phoneNumber) {\n        errors.phoneNumber = \"Please enter 10 digit phone number\";\n      }\n      if (!values.password) {\n        errors.password = \"Please enter password\";\n      }\n      return errors;\n    },\n    onSubmit: (values) => {\n      setIsAppLoader(true);\n      dispatch(AUTH_ACTIONS.authenticateUser({ formData: values }));\n    }\n  });\n\n  useEffect(() => {\n    // console.log(\"userState\", userState);\n    switch (userState.case) {\n      case AUTH_ACTIONS_TYPES.AUTHENTICATE_USER_SUCCESS:\n        setIsAppLoader(false);\n        navigate(\"./register\", { replace: true });\n        storage.storeData(storage.keys.TOKEN_CL, userState.userDetails.accessToken);\n        storage.storeData(storage.keys.USER_TYPE, userState.userDetails.userType);\n        break;\n      case AUTH_ACTIONS_TYPES.AUTHENTICATE_USER_NOT_VERIFIED:\n        setIsAppLoader(false);\n        navigate(\"/otp\", {\n          replace: true,\n          state: {\n            otp: userState.userDetails.otp ? userState.userDetails.otp.toString() : null,\n            phoneNumber: formik.values.phoneNumber,\n            userType: formik.values.userType\n          }\n        });\n        storage.storeData(storage.keys.USER_TYPE, userState.userDetails.userType);\n        break;\n      case AUTH_ACTIONS_TYPES.AUTHENTICATE_USER_FAILURE:\n        setIsAppLoader(false);\n        break;\n      default:\n        break;\n    }\n  }, [userState.case]);\n\n\n\n  return (\n    <div className=\"form-area\">\n      <h2>Login</h2>\n      <form onSubmit={formik.handleSubmit} noValidate>\n        <div className=\"form-inner\">\n          <div className=\"form-input\">\n            <input\n              type=\"text\"\n              placeholder=\"Mobile number\"\n              name=\"phoneNumber\"\n              onChange={formik.handleChange}\n              value={formik.values.phoneNumber}\n            />\n            {/* <p className=\"error-text\">Please enter phone numer</p> */}\n          </div>\n\n          <div className=\"form-input\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n            {/* <p className=\"error-text\">Please enter password</p> */}\n          </div>\n          <button type=\"submit\" className=\"btn-common\">\n            Submit\n          </button>\n          <button type=\"button\" className=\"btn-underline\">\n            New User <span onClick={() => navigate(\"./register\", { replace: true })}>Register here!</span>{\" \"}\n          </button>\n          <button type=\"button\" className=\"btn-underline\">\n            <span onClick={() => navigate(\"/forgotPassword\", { replace: true })}>Forgot Password?</span>{\" \"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import * as AUTH_TYPES from \"./types\";\n\n/**\n * @summary Authetication Actions\n */\n//Actions\n\n//1. Authenticate User Action\nexport const authenticateUser = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.AUTHENTICATE_USER, payload };\n};\n\n//2. Register User Action\nexport const registerUser = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.REGISTER_USER, payload };\n};\n\n//3. Forgot Password Action\nexport const forgotPassword = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.FORGOT_PASSWORD, payload };\n};\n\n//4. Change Password Action\nexport const changePassword = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.CHANGE_PASSWORD, payload };\n};\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","keys","storeData","jsonValue","JSON","stringify","localStorage","setItem","console","navigate","useNavigate","dispatch","useDispatch","setIsAppLoader","React","AppLoaderContext","userState","useSelector","state","userData","formik","useFormik","initialValues","phoneNumber","password","userType","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","AUTH_ACTIONS","formData","useEffect","case","AUTH_ACTIONS_TYPES","replace","storage","userDetails","accessToken","otp","toString","className","handleSubmit","noValidate","type","placeholder","name","onChange","handleChange","onClick","authenticateUser","payload","AUTH_TYPES","registerUser","forgotPassword"],"sourceRoot":""}