{"version":3,"file":"static/js/80.49da93c3.chunk.js","mappings":"0OAmGA,MAzFA,WACE,IAAMA,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAETC,EAAmBC,EAAAA,WAAiBC,EAAAA,IAApCF,eACFG,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAU,OAAKA,EAAMC,QAAQ,IACtDC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,SAAU,YAEZC,gBAAgB,EAChBC,kBAAkB,EAElBC,SAAU,SAACC,GACT,IAAIC,EAAc,CAAC,EAmBnB,OAlBKD,EAAOT,YACVU,EAAOV,UAAY,gCAKhBS,EAAOP,cACVQ,EAAOR,YAAc,sCAElBO,EAAON,WACVO,EAAOP,SAAW,yBAEfM,EAAOL,cACVM,EAAON,YAAc,0CAEnBK,EAAON,UAAYM,EAAOL,aAAeK,EAAOL,cAAgBK,EAAON,WACzEO,EAAON,YAAc,8BAEhBM,CACT,EACAC,SAAU,SAACF,GACTnB,GAAe,GACfF,EAASwB,EAAAA,GAA0B,CAAEC,SAAUJ,IACjD,IAoBF,OAjBAK,EAAAA,EAAAA,YAAU,WAER,OADAC,QAAQC,IAAI,YAAavB,GACjBA,EAAUwB,MAChB,KAAKC,EAAAA,GAML,KAAKA,EAAAA,GACH5B,GAAe,GAKrB,GAAG,CAACG,EAAUwB,QAGZ,iBAAKE,UAAU,YAAW,WACxB,kCACA,iBAAMR,SAAUd,EAAOuB,aAAcC,YAAU,YAC7C,iBAAKF,UAAU,aAAY,WAC3B,iBAAKA,UAAU,aAAY,WACzB,kBACEG,KAAK,SACLC,YAAY,MACZC,KAAK,YACLC,SAAU5B,EAAO6B,aACjBC,MAAO9B,EAAOY,OAAOT,aAEvB,cAAGmB,UAAU,aAAY,uBAEzB,mBAAQG,KAAK,SAASH,UAAU,aAAY,qBAI5C,mBAAQA,UAAU,gBAAgBS,QAAS,kBAAM1C,EAAQ,UAAU,EAAC,kCAK9E,C,sHCzFa2C,EAAmB,SAACC,GAE/B,MAAO,CAAER,KAAMS,EAAAA,GAA8BD,QAAAA,EAC/C,EAGaE,EAAe,SAACF,GAE3B,MAAO,CAAER,KAAMS,EAAAA,GAA0BD,QAAAA,EAC3C,EAGaG,EAAiB,SAACH,GAE7B,MAAO,CAAER,KAAMS,EAAAA,GAA4BD,QAAAA,EAC7C,C","sources":["pages/Auth/OTP/otpScreen.tsx","redux/actions/Auth/authActions.tsx"],"sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { storage } from \"../../../utills\";\nimport \"./otp.scss\";\nimport * as AUTH_ACTIONS from \"../../../redux/actions/Auth/authActions\";\nimport * as AUTH_ACTIONS_TYPES from \"../../../redux/actions/Auth/types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppLoaderContext } from \"../../../contexts\";\n\nfunction SignupScreen() {\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  // const { isSideActive, toggleSidebar } = React.useContext(SideBarContext);\n  const { setIsAppLoader } = React.useContext(AppLoaderContext);\n  const userState = useSelector((state: any) => state.userData);\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      password: \"\",\n      cnfPassword: \"\",\n      userType: \"consumer\"\n    },\n    validateOnBlur: true,\n    validateOnChange: false,\n    // validationSchema: validationSchema,\n    validate: (values) => {\n      let errors: any = {};\n      if (!values.firstName) {\n        errors.firstName = \"Please enter user first name\";\n      }\n      // if (!values.lastName) {\n      //   errors.lastName = \"Please enter user last name\"\n      // }\n      if (!values.phoneNumber) {\n        errors.phoneNumber = \"Please enter 10 digit phone number\";\n      }\n      if (!values.password) {\n        errors.password = \"Please enter password\";\n      }\n      if (!values.cnfPassword) {\n        errors.cnfPassword = \"Please again enter password to confirm\";\n      }\n      if (values.password && values.cnfPassword && values.cnfPassword !== values.password) {\n        errors.cnfPassword = \"Not matching with password\";\n      }\n      return errors;\n    },\n    onSubmit: (values) => {\n      setIsAppLoader(true);\n      dispatch(AUTH_ACTIONS.registerUser({ formData: values }));\n    }\n  });\n\n  useEffect(() => {\n    console.log(\"userState\", userState);\n    switch (userState.case) {\n      case AUTH_ACTIONS_TYPES.REGISTER_USER_SUCCESS:\n        setIsAppLoader(false);\n        // history(\"./register\");\n        // storage.storeData(storage.keys.TOKEN_CL, userState.userDetails.accessToken);\n        // storage.storeData(storage.keys.USER_TYPE, userState.userDetails.userType);\n        break;\n      case AUTH_ACTIONS_TYPES.REGISTER_USER_FAILURE:\n        setIsAppLoader(false);\n        break;\n      default:\n        break;\n    }\n  }, [userState.case]);\n\n  return (\n    <div className=\"form-area\">\n      <h2>OTP </h2>\n      <form onSubmit={formik.handleSubmit} noValidate>\n        <div className=\"form-inner\">\n        <div className=\"form-input\">\n          <input\n            type=\"number\"\n            placeholder=\"OTP\"\n            name=\"firstName\"\n            onChange={formik.handleChange}\n            value={formik.values.firstName}\n          />\n          <p className=\"error-text\">error</p>\n          </div>\n          <button type=\"submit\" className=\"btn-common\">\n            Submit\n          </button>\n\n          <button className=\"btn-underline\" onClick={() => history(\"./login\")}>Back to login</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SignupScreen;\n","import * as AUTH_TYPES from \"./types\";\n\n/**\n * @summary Authetication Actions\n */\n//Actions\n\n//1. Authenticate User Action\nexport const authenticateUser = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.AUTHENTICATE_USER, payload };\n};\n\n//2. Register User Action\nexport const registerUser = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.REGISTER_USER, payload };\n};\n\n//3. Forgot Password Action\nexport const forgotPassword = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.FORGOT_PASSWORD, payload };\n};\n\n//4. Change Password Action\nexport const changePassword = (payload: object) => {\n  // console.log(\"PAYLOAD @ AuthenticateUserAction\",payload);\n  return { type: AUTH_TYPES.CHANGE_PASSWORD, payload };\n};\n"],"names":["history","useNavigate","dispatch","useDispatch","setIsAppLoader","React","AppLoaderContext","userState","useSelector","state","userData","formik","useFormik","initialValues","firstName","lastName","phoneNumber","password","cnfPassword","userType","validateOnBlur","validateOnChange","validate","values","errors","onSubmit","AUTH_ACTIONS","formData","useEffect","console","log","case","AUTH_ACTIONS_TYPES","className","handleSubmit","noValidate","type","placeholder","name","onChange","handleChange","value","onClick","authenticateUser","payload","AUTH_TYPES","registerUser","forgotPassword"],"sourceRoot":""}